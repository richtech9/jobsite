jQuery(function ($) {    //code-bookmark-js helps show and hide sold content copies to the freelancer    //code-notes start of expanding and hiding sold content    jQuery('span.fl-content-action-expand-copies').click(function () {        let dat = $(this);        expand_kids(dat);    });    //code-bookmark-js helps show and hide sold content copies to the freelancer    function expand_kids(span) {        let cid = span.data('cid');        let my_table = span.closest('table');        let deese_rows = my_table.find('tr.fl-copied-content[data-pid="' + cid + '"]');        deese_rows.toggleClass('fl-show-copied-content');        span.toggleClass('fl-show-copied-content');    }    //code-bookmark-js helps show and hide sold content copies to the freelancer    jQuery('td.fl-click-to-expand-copies').click(function (e) {        e.stopPropagation();        e.preventDefault();        let dat = $(this);        let span = dat.closest('tr').find('span.fl-content-action-expand-copies');        expand_kids(span);    });    //code-bookmark-s when the linguist submits new or updated content for posting or just saving    // noinspection JSUnusedGlobalSymbols    $("#add-linguist-content").validate({        ignore: [],        rules: {            content_title: {required: true, minlength: 3},            content_summary: {required: true, minlength: 3},            content_amount: {                required: function (/*element*/) {                    if (jQuery("#content_sale_type").val() !== "Free") {                        return true;                    } else {                        return false;                    }                },                number: true            },            content_cover_image: {                required: function (/*element*/) {                    if (jQuery('input[name="content_id"]').val() === "") {                        return true;                    } else {                        return false;                    }                }            },        },        submitHandler: function (/*form*/) {            addContent();        }    });    //code-bookmark-js when the linguist adds files to a content    $(document).on('click', '#add_more_button', function () {        //code-notes new update with fl_content_new_chapter_content_form_part        fl_add_new_chapter_editor(null,null,false);    });    /*     * Author Name: Lakhvinder Singh     * Method: 		addContent     * Description: addContent     *     */    //code-bookmark-js this is where the content , or changed content, it actually uploaded to the server    function addContent() {        jQuery('.publish_type_button').attr("disabled", true);        var gotoRed = jQuery('#redirectattr').val();        var formClass = jQuery('#add-linguist-content');        var postData = new FormData(jQuery("#add-linguist-content")[0]);        jQuery.ajax({            url: adminAjax.url,            type: "POST",            data: postData,            processData: false,            contentType: false,            success: function (response_thing) {                var response = freelinguist_safe_cast_to_object(response_thing);                jQuery(formClass).find('.ajax_report').removeClass('alert-success').removeClass('alert').removeClass('alert-danger').fadeIn(200);                if (response.status === true) {                    if (response.message) {                        if (response.status === true) {                            jQuery(formClass).find('.ajax_report').removeClass('alert-danger').addClass('alert-success').addClass('alert').html(response.message);                        } else {                            jQuery(formClass).find('.ajax_report').removeClass('alert-success').addClass('alert-danger').addClass('alert').html(response.message);                            jQuery('.publish_type_button').attr("disabled", false);                        }                    }                    if (response.url) {                        setTimeout(function () {                            //window.location.href = response.url;                            window.location.href = gotoRed;                        }, 300);                    }                    if (response.selfReload) {                        setTimeout(function () {                            window.location.href = gotoRed;                        }, 300);                    }                    if (response.scrollToElement) {                        scrollToElement(formClass, 1000);                        window.location.href = gotoRed;                    }                    setTimeout(function () {                        jQuery(formClass).find('.ajax_report').fadeOut(1000);                        window.location.href = gotoRed;                    }, 300);                } else {                    jQuery(formClass).find('.ajax_report').removeClass('alert-success').addClass('alert-danger').addClass('alert').html(response.message);                    jQuery(formClass).find('.ajax_report').fadeOut(3000);                    jQuery('.publish_type_button').attr("disabled", false);                }            }        });        return false;    }    //code-bookmark-js helper function to uploading content    function scrollToElement(element, speed) {        jQuery('html, body').animate({scrollTop: jQuery(element).position().top - 70}, speed);    }    //code-bookmark-js when the freelancer is deleting a chapter in the content    //code-notes modified the ajax return to handle standard data    $(document).on('click', '.delete_content_chapter', function () {        var delete_content_chapter_id = jQuery(this).attr('id');        var del_selector = jQuery(this);        bootbox.confirm({            message: reg_validation.message_confirm,            buttons: {                confirm: {                    label: reg_validation.yes,                    className: 'btn-success'                },                cancel: {                    label: reg_validation.no,                    className: 'btn-danger'                }            },            callback: function (result) {                if (result === true) {                    var data = {                        'action': 'delete_content_chapter',                        'delete_content_chapter_id': delete_content_chapter_id                    };                    jQuery.ajax({                        type: 'POST',                        url: adminAjax.url,                        data: data,                        global: false,                        success: function (response_raw) {                            var values = freelinguist_safe_cast_to_object(response_raw);                            if (values.status === true) {                                del_selector.closest("tr").remove();                                //bootbox.alert(values.message);                            } else {                                bootbox.alert(values.message);                            }                        }                    });                }            }        });    });    //code-bookmark-js when the freelancer is deleting a file in the content    //code-notes modified the ajax return to handle standard data    $(document).on('click', '.delete_content_file', function () {        var delete_content_file_id = jQuery(this).attr('id');        var del_selector = jQuery(this);        bootbox.confirm({            message: reg_validation.message_confirm,            buttons: {                confirm: {                    label: reg_validation.yes,                    className: 'btn-success'                },                cancel: {                    label: reg_validation.no,                    className: 'btn-danger'                }            },            callback: function (result) {                if (result === true) {                    var data = {'action': 'delete_content_file', 'delete_content_file_id': delete_content_file_id};                    jQuery.ajax({                        type: 'POST',                        url: adminAjax.url,                        data: data,                        global: false,                        success: function (response_raw) {                            var values = freelinguist_safe_cast_to_object(response_raw);                            if (values.status === true) {                                del_selector.closest("tr").remove();                                //bootbox.alert(values.message);                            } else {                                bootbox.alert(values.message);                            }                        }                    });                }            }        });    });    //code-bookmark-js when the freelancer wants to delete a whole content    $(document).on('click', '.delete_linguist_content', function () {        var delete_content_id = jQuery(this).attr('id');        var del_selector = jQuery(this);        bootbox.confirm({            message: reg_validation.message_confirm,            buttons: {                confirm: {                    label: reg_validation.yes,                    className: 'btn-success'                },                cancel: {                    label: reg_validation.no,                    className: 'btn-danger'                }            },            callback: function (result) {                if (result === true) {                    var data = {'action': 'delete_linguist_content', 'delete_content_id': delete_content_id};                    jQuery.ajax({                        type: 'POST',                        url: adminAjax.url,                        data: data,                        global: false,                        success: function (response) {                            var values = freelinguist_safe_cast_to_object(response);                            if (values.status === true) {                                del_selector.closest("tr").remove();                                //bootbox.alert(values.message);                            } else {                                bootbox.alert(values.message);                            }                        }                    });                }            }        });    });    //code-bookmark-js when the freelancer wants to delete several content at once    $(document).on('click', '.delete_linguist_content_multiple', function () {        var delete_content_id = getContentIDValue();        if (delete_content_id !== '') {            bootbox.confirm({                message: reg_validation.message_confirm,                buttons: {                    confirm: {                        label: reg_validation.yes,                        className: 'btn-success'                    },                    cancel: {                        label: reg_validation.no,                        className: 'btn-danger'                    }                },                callback: function (result) {                    if (result === true) {                        var data = {                            'action': 'delete_linguist_content_multiple',                            'delete_content_id': delete_content_id                        };                        jQuery.ajax({                            type: 'POST',                            url: adminAjax.url,                            data: data,                            global: false,                            success: function (response) {                                var values = freelinguist_safe_cast_to_object(response);                                if (values.status === true) {                                    window.location.reload();                                } else {                                    bootbox.alert(values.message);                                }                            }                        });                    }                }            });        } else {            bootbox.alert("Please select any content");        }    });    //code-bookmark-js used as a helper funtion to delete many content at once    function getContentIDValue() {        /* declare an checkbox array */        var chkArray = [];        /* look for all checkboes that have a class 'chk' attached to it and check if it was checked */        jQuery("#checkboxlist input:checked").each(function () {            chkArray.push(jQuery(this).val());        });        /* we join the array separated by the comma */        var selected;        selected = chkArray.join(',');        return selected;    }});//code-bookmark used to add a new blank/or with words -- chapter form in the freelancer edit contentfunction fl_add_new_chapter_editor(title,words,b_convert_to_bb_code) {    if (!words) {        words = '';    }    if (b_convert_to_bb_code) {        b_convert_to_bb_code = 1;    } else {        b_convert_to_bb_code = 0;    }    var data = {        action: 'fl_content_new_chapter_content_form_part',        words: words,        b_convert_to_bb_code : b_convert_to_bb_code    };    if (!title) {        title = '';    } else {        //code-notes replace any single or double quotes in the title so the js is not broken below        title = encodeURIComponent(title);    }    $.ajax({        type: 'POST',        url: adminAjax.url,        data: data,        global: false,        success: function (response_raw) {            /**             * @type {FreelinguistBasicAjaxResponse} response             */            let response = freelinguist_safe_cast_to_object(response_raw);            if (response.status === true) {                let form_part = response.message;                var html_n = '';                html_n += '<table id="" width="100%" style="background: #f1f1f1;" class="editpor">';                html_n += '<tr class="edit-field">';                html_n += '<td style="padding: 15px;">';                html_n += '<input type="hidden" name="sub_title_id[]" id="editor_title_id_' + editor_title_id_counter++ + '" value="" >';                html_n += '<input type="text" name="sub_title[]" id="editor_sub_title_' + editor_sub_title_id_counter + '" value="'+title+'" placeholder="Title">';                html_n += '<input type="number" name="sub_page_number[]" id="editor_sub_page_number_' + editor_sub_title_id_counter + '" value="" placeholder="Page">';                html_n += '</td>';                html_n += '</tr>';                html_n += '<tr class="edit-field">';                html_n += '<td style="padding: 15px;">';                html_n += form_part;                html_n += '</td>';                html_n += '</tr>';                html_n += '</table>';                jQuery('#add_more_table_list').append(html_n);            } else {                will_handle_ajax_error('Content Edit Add More', response.message);            }        }    });}